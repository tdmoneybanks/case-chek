{"version":3,"sources":["app.js","chicago-data-service.js","data-list-controller.js","google-street-view-service.js"],"names":["caseChekApp","angular","module","controller","AppController","$scope","chicagoDataService","searchText","keys","name","type","results","data","page","hasMore","search","keyArray","Object","_","pickBy","value","getData","join","then","response","length","$watch","gooleApiKey","service","$http","options","params","method","url","headers","ListController","ModalService","$parent","onPageOne","handleClick","showModal","templateUrl","violationCount","inspection","violations","trimmedViolations","inspectionDate","moment","format","controllerAs","modal","element","substr","indexOf","size","locationData","address","addressUri","encodeURIComponent","location"],"mappings":"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","file":"bundle.js","sourcesContent":["'use strict';\n\nconst caseChekApp = angular.module('caseChekApp', ['angularModalService']);\n\ncaseChekApp.controller('AppController', ['$scope', 'chicagoDataService', function AppController($scope, chicagoDataService) {\n    $scope.searchText = '';\n    $scope.keys = {\n        name: true,\n        type: true,\n        results: true\n    }\n    $scope.data = [];\n    $scope.page = 1;\n    $scope.hasMore = false;\n\n    /**\n     * real-time search queries based on input tying\n     */\n    $scope.search = function() {\n        $scope.page = 1;\n        $scope.hasMore = true;\n        const keyArray = Object.keys(_.pickBy($scope.keys, (value) => {\n            return value;\n        }));\n        chicagoDataService.getData({searchText: $scope.searchText, page: 1, keys: keyArray.join()}).then((response) => {\n            $scope.data = response.data;\n            $scope.hasMore = response.data.length < 15 ? false : true;\n        });\n    }\n    // TODO: could be refactored to not use an expensive watcher but instead event listeners on buttons\n    /**\n     * Watch for a change on the page variable to update data list by pagination\n     */\n    $scope.$watch('page', function() {\n        chicagoDataService.getData({searchText: $scope.searchText, page: $scope.page}).then((response) => {\n            $scope.data = response.data;\n            $scope.hasMore = response.data.length < 15 ? false : true;\n        });\n    });\n}]);","/**\n * Service to get the chicago data from express server and pass query params\n */\n\n// TODO: (enhancement) refactor this key to env variable then queried from express\nconst gooleApiKey = 'AIzaSyA5IGNDHog2WvQgwH0Qj-YlPbA_FS_q52k';\n\ncaseChekApp.service('chicagoDataService', function($http) {\n\n    /**\n     *\n     * @param options - query param options for search and advanced search\n     * @return {Promise} - returns http promise of chicago data\n     */\n    this.getData = function(options) {\n        const params = options || {};\n        return $http({\n            method: 'GET',\n            url: '/chicago-data',\n            params: {\n                'searchQuery': params.searchText || '',\n                'page': params.page || '1',\n                'keywords': params.keys || 'name,type,results'\n            },\n            headers: {}\n        });\n    }\n});","caseChekApp.controller('ListController',['$scope', 'chicagoDataService', 'ModalService', function ListController($scope, chicagoDataService, ModalService) {\n\n    // initial data grab from server\n    chicagoDataService.getData({searchText: $scope.searchText, page: $scope.page}).then((response) => {\n        $scope.$parent.data = response.data;\n        $scope.$parent.hasMore = response.data.length < 15 ? false : true;\n    });\n\n    // TODO: refactor, this can probably be done in the template\n    /**\n     * used by prev button show/hide logic\n     * @return {boolean}\n     */\n    $scope.onPageOne = function() {\n        return $scope.page === 1;\n    };\n\n    /**\n     * handleClick - function to handle click of list card\n     * @param data - data of the list card that was clicked on\n     */\n    $scope.handleClick = function(data) {\n        ModalService.showModal({\n            templateUrl: '../templates/details-modal.html',\n            controller: function() {\n                this.data = data || {name: 'test'};\n                this.violationCount = $scope.violationCount(data.inspection.violations);\n                this.trimmedViolations = $scope.trimmedViolations(data.inspection.violations);\n                this.url = $scope.url(data, \"400x500\");\n                this.inspectionDate = moment(data.inspection.inspectionDate).format(\"L\");\n            },\n            controllerAs: 'detailsModalController'\n        }).then(function(modal) {\n            modal.element.modal();\n        });\n    }\n\n    // TODO: move this violation data alteration to the backend?\n    /**\n     *\n     * @param violations - text block of violation count and violation list\n     * @return {string | a number of violations or 0}\n     */\n    $scope.violationCount = function(violations) {\n        return violations.substr(0, violations.indexOf('.')) || '0';\n    };\n\n    /**\n     *\n     * @param violations - text block of violation count and violation list\n     * @return {string | violation list without the count}\n     */\n    $scope.trimmedViolations = function(violations) {\n        return violations.substr(violations.indexOf(' ')) || 'No Violations Found';\n    };\n\n    /**\n     *\n     * @param data - data of list card, used for address\n     * @param size - size of street view image to query\n     * @return {string} - img url for google streetview api\n     */\n    $scope.url = function(data, size=\"300x275\") {\n        if (data.locationData.address) {\n            const addressUri = encodeURIComponent(data.locationData.address);\n            return `https://maps.googleapis.com/maps/api/streetview?size=${size}&location=${addressUri}&fov=90&heading=235&pitch=10&key=${gooleApiKey}`;\n        }\n    };\n}]);","/**\n * This is currenly an un-used service. TODO enhancement would be to use this service to do error checking with api\n */\ncaseChekApp.service('googleStreetViewService', function($http) {\n\n    /**\n     *\n     * @param location - address or set of lat/long coordinates\n     * @return {Promise} - returns an http get promise\n     */\n    this.getData = function(location) {\n        return $http({\n            method: 'GET',\n            url: `https://maps.googleapis.com/maps/api/streetview?size=400x400&location=${location}&fov=90&heading=235&pitch=10&key=${gooleApiKey}`,\n            params: '',\n            headers: {}\n        });\n    }\n});"]}